# This template file shows all configuration options and possible values.
# Do not use inline comments in your config files. 
# This breaks the config parser (so this example doesn't work as well!)
#-------------------------------------------------
# Infrastructure settings
#-------------------------------------------------
[infrastructure]
# VM provider
provider = qemu         # Options: qemu

# Only do infrastructure deployment, ignore the benchmark
infra_only = False      # Options: True, False

# Number of VMs to spawn per tier
cloud_nodes = 1         # Options: >= 0
edge_nodes = 1          # Options: >= 0
endpoint_nodes = 1      # Options: >= 0

# Number of cores per VM
cloud_cores = 4         # Options: >= 2
edge_cores = 2          # Options: >= 1
endpoint_cores = 1      # Options: >= 1

# CPU bandwidth quota (at 0.5 a VM will use a CPU core for half of the time)
cloud_quota = 1.0       # Options: 0.1 <=x <= 1.0
edge_quota = 0.66       # Options: 0.1 <=x <= 1.0
endpoint_quota = 0.33   # Options: 0.1 <=x <= 1.0

# Network preset for latency and throughput
network_preset = 4g     # Options: 4g, 5g

# Custom network settings, only applies if network_preset is empty
# Between cloud nodes and between cloud and edge
cloud_latency_avg = 7.5     # Options: >= 5.0
cloud_latency_var = 2.5     # Options: >= 0.0
cloud_throughput = 1000     # Options: >= 1.0

# Custom network settings between endpoints and cloud/edge
endpoint_latency_avg = 45   # Options: >= 5.0
endpoint_latency_var = 5    # Options: >= 0.0
endpoint_throughput = 7.21  # Options: >= 1.0

# Use more physical machines than the one you are currently using
external_physical_machines = user@machine1,user@machine2 # Any valid SSH address

#-------------------------------------------------
# Resource manager settings
#-------------------------------------------------
[resource_manager]
# Resource managers to use in each tier (can be ommited if not using a tier)
cloud_rm = kubernetes   # Options: kubernetes
edge_rm = kubeedge      # Options: kubeedge

#-------------------------------------------------
# Benchmark settings
#-------------------------------------------------
[benchmark]
# Deployment mode (where should processing happen)
mode = edge             # Options: cloud, edge, endpoint

# Force docker pull for application updates
docker_pull = False     # Options: True, False

# Delete VMs after benchmark run
delete = False          # Options: True, False

# Also do a netperf network benchmark 
netperf = False         # Options: True, False

# Application to use
application = image_classification  # Options: image_classification

# Data generation frequency in data entities / second
frequency = 5           # Options: >0
