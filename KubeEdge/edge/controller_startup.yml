---
- hosts: cloudcontroller
  become: true
  tasks:
  - name: Ensure docker service is running
    systemd:
      name: docker
      state: started
  
  - name: Add cloud user to docker group
    user:
      name: "{{ username }}"
      group: docker

  - name: Reload ip settings
    command: sysctl -p

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ cloud_ip }}
      create: true

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: true
      state: restarted

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address={{ cloud_ip }} --apiserver-cert-extra-sans={{ cloud_ip }}  --node-name cloud-master --pod-network-cidr=192.168.0.0/16

  - name: Create user Kubernetes directory
    file:
      path: "/home/{{ username }}/.kube"
      state: directory
  
  - name: Copy Kubernetes files to user
    copy:
      src: /etc/kubernetes/admin.conf
      dest: "/home/{{ username }}/.kube/config"
      owner: "{{ username }}"
      group: "{{ username }}"
      remote_src: true

  - name: Get KubeEdge and unarchive it
    unarchive:
      src: https://github.com/kubeedge/kubeedge/releases/download/v1.8.1/keadm-v1.8.1-linux-amd64.tar.gz
      dest: "/home/{{ username }}"
      remote_src: true

  - name: Make KubeEdge executable
    file:
      dest: "/home/{{ username }}/keadm-v1.8.1-linux-amd64/keadm/keadm"
      mode: +x

  - name: Move KubeEdge executable
    command: mv "/home/{{ username }}/keadm-v1.8.1-linux-amd64/keadm/keadm" /usr/local/bin

  - name: Remove unneeded KubeEdge files
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "/home/{{ username }}/keadm-v1.8.1-linux-amd64"
      - "/home/{{ username }}/keadm-v1.8.1-linux-amd64.tar.gz"

  - name: Link KubeEdge to Kubernetes
    command: ln -s "/home/{{ username }}/.kube" /root
    args:
      warn: false

  # Ansible SSH's into the VM, executes a command and then kills the session.
  # This doesn't always work with KubeEdge, so we nohup KubeEdge and then wait for it to finish.
  - name: Initialize KubeEdge and get the token for edge nodes to join
    shell: |
      nohup keadm init --kube-config="/home/{{ username }}/.kube/config" --advertise-address={{ cloud_ip }} --kubeedge-version=1.8.1
      sleep 30
      keadm gettoken --kube-config="/home/{{ username }}/.kube/config" > /tmp/join-command.txt
  
  - name: Copy join command to local file
    fetch: 
      src: /tmp/join-command.txt 
      dest: /tmp/
      flat: true

  - name: Reset KubeEdge
    command: nohup keadm init --kube-config="/home/{{ username }}/.kube/config" --advertise-address={{ cloud_ip }} --kubeedge-version=1.8.1

  - name: Run Netserver
    command: netserver

  handlers:
    - name: docker status
      service: name=docker state=started
